{"version":3,"sources":["../node_modules/_three@0.124.0@three/examples/jsm/libs/stats.module.js","app/demo/Scene/GLTF/GLTFScene.js","app/demo/View/GLTF.jsx"],"names":["Stats","mode","container","document","createElement","addPanel","panel","appendChild","dom","showPanel","id","i","children","length","style","display","cssText","addEventListener","event","preventDefault","beginTime","performance","Date","now","prevTime","frames","fpsPanel","Panel","msPanel","self","memory","memPanel","REVISION","begin","end","time","update","usedJSHeapSize","jsHeapSizeLimit","this","domElement","setMode","name","fg","bg","min","Infinity","max","round","Math","PR","window","devicePixelRatio","WIDTH","HEIGHT","TEXT_X","TEXT_Y","GRAPH_X","GRAPH_Y","GRAPH_WIDTH","GRAPH_HEIGHT","canvas","width","height","context","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","value","maxValue","drawImage","GLTFScene","playAnm","model","mesh","scene","mixer","THREE","clip","findByName","animations","action","clipAction","lastAnmFrameStamp","lastFrameStamp","play","render","pastTime","renderer","camera","deltaSeconds","stats","requestAnimationFrame","init","addModel","then","addRenderer","addScene","addLight","addCamera","addOrbitControl","addStats","background","innerWidth","innerHeight","position","z","setPixelRatio","setSize","toneMapping","toneMappingExposure","outputEncoding","Promise","resolve","GLTFLoader","load","scale","set","y","add","OrbitControls","LightFront","LightBack","Demo","WebGLRef","useRef","useEffect","current","ref"],"mappings":"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","file":"static/js/12.4f7554cb.chunk.js","sourcesContent":["var Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time >= prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport default Stats;\n","import * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\nimport Stats from \"three/examples/jsm/libs/stats.module.js\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\n\nexport default class GLTFScene {\n    constructor(container) {\n        this.container = container;\n        this.init();\n    }\n\n    init() {\n        this.addModel().then(this.playAnm);\n        this.addRenderer();\n        this.addScene();\n        this.addLight();\n        this.addCamera();\n        this.addOrbitControl();\n        this.addStats();\n    }\n\n    addScene() {\n        const scene = new THREE.Scene();\n        scene.background = new THREE.Color(0xffffff);\n        this.scene = scene;\n    }\n\n    addCamera() {\n        const camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 10000);\n        camera.position.z = 100;\n        this.camera = camera;\n    }\n\n    addRenderer() {\n        const renderer = new THREE.WebGLRenderer();\n        renderer.setPixelRatio(window.devicePixelRatio);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.toneMapping = THREE.ACESFilmicToneMapping;\n        renderer.toneMappingExposure = 1.25;\n        renderer.outputEncoding = THREE.sRGBEncoding;\n\n        this.container.appendChild(renderer.domElement);\n        this.renderer = renderer;\n    }\n\n    addModel() {\n        return new Promise((resolve) => {\n            const loader = new GLTFLoader();\n            loader.load(\"assets/dying_man/Dying.gltf\", (model) => {\n                const mesh = model.scene;\n                mesh.scale.set(20, 20, 20);\n                mesh.position.y -= 30;\n                this.scene.add(mesh);\n                resolve(model);\n            });\n        });\n    }\n\n    playAnm = (model) => {\n        const mesh = model.scene;\n        const mixer = new THREE.AnimationMixer(mesh);\n        const clip = THREE.AnimationClip.findByName(model.animations, \"mixamo.com\");\n        const action = mixer.clipAction(clip);\n        this.lastAnmFrameStamp = this.lastFrameStamp;\n        this.mixer = mixer;\n        action.play();\n    };\n\n    addOrbitControl() {\n        new OrbitControls(this.camera, this.renderer.domElement);\n    }\n\n    addLight() {\n        const LightFront = new THREE.PointLight(0xffffff, 2, 200);\n        LightFront.position.z = 100;\n        const LightBack = new THREE.PointLight(0xffffff, 2, 200);\n        LightBack.position.z = -100;\n        this.scene.add(LightFront);\n        this.scene.add(LightBack);\n    }\n\n    addStats() {\n        const stats = new Stats();\n        this.container.appendChild(stats.dom);\n        this.stats = stats;\n    }\n\n    render = (pastTime) => {\n        this.lastFrameStamp = pastTime;\n        const { renderer, scene, camera, render, lastFrameStamp } = this;\n        if (this.mixer) {\n            const deltaSeconds = pastTime - this.lastAnmFrameStamp;\n            this.lastAnmFrameStamp = lastFrameStamp;\n            this.mixer.update(deltaSeconds / 1000);\n        }\n        renderer.render(scene, camera);\n        this.stats.update();\n        requestAnimationFrame(render);\n    };\n}\n","import React, { useEffect, useRef } from \"react\";\nimport GLTFScene from \"../Scene/GLTF/GLTFScene\";\n\nexport default function Demo() {\n    const WebGLRef = useRef();\n\n    useEffect(() => {\n        const scene = new GLTFScene(WebGLRef.current);\n        scene.render();\n    }, []);\n\n    return <div id='CPR' ref={WebGLRef}></div>;\n}\n"],"sourceRoot":""}